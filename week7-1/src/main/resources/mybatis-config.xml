<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <!-- 引入外部配置文件
        并可以在此配置 -->
    <properties resource="db.properties">
        <property name="username" value="root"/>
        <property name="password" value="789456123gyt"/>
    </properties>

    <!--  可以给实体类起别名  -->
    <typeAliases>
        <!--    一个具体类    -->
        <!--<typeAlias type="pojo.User" alias="User"/>-->
        <!--    指定包    -->
        <package name="pojo"/>
    </typeAliases>

    <environments default="development">
        <environment id="development">
            <!-- 在 MyBatis 中有两种类型的事务管理器（也就是 type="[JDBC|MANAGED]"）-->
            <!--  JDBC – 这个配置直接使用了 JDBC 的提交和回滚设施，它依赖从数据源获得的连接来管理事务作用域。    -->
            <!--  MANAGED – 这个配置几乎没做什么。它从不提交或回滚一个连接，而是让容器来管理事务的整个生命周期（比如 JEE 应用服务器的上下文）。
             默认情况下它会关闭连接。然而一些容器并不希望连接被关闭，因此需要将 closeConnection 属性设置为 false 来阻止默认的关闭行为。-->
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
    </environments>

    <!--每一个MapperRegister  都要在这里配置注册-->
    <mappers>
        <mapper resource="dao/accountMapper.xml"></mapper>
        <!--    <mapper class="dao.UserMapper"/>-->
    </mappers>

</configuration>